version: "3"
services:

  front:
    image: thecodingmachine/nodejs:14
    environment:
      DEBUG_MODE: "$DEBUG_MODE"
      JITSI_URL: "$JITSI_URL"
      JITSI_PRIVATE_MODE: "$JITSI_PRIVATE_MODE"
      NODE_ENV: development
      API_URL: "pusher.$DOMAIN"
      UPLOADER_URL: "uploader.$DOMAIN"
#      MAPS_URL: /maps
      STARTUP_COMMAND_1: ./templater.sh
      STARTUP_COMMAND_2: yarn install
      TURN_SERVER: "turn:localhost:3478,turns:localhost:5349"
      # Use TURN_USER/TURN_PASSWORD if your Coturn server is secured via hard coded credentials.
      # Advice: you should instead use Coturn REST API along the TURN_STATIC_AUTH_SECRET in the Back container
      TURN_USER: ""
      TURN_PASSWORD: ""
      START_ROOM_URL: "$START_ROOM_URL"
      MAX_PER_GROUP: "$MAX_PER_GROUP"
      MAX_USERNAME_LENGTH: "$MAX_USERNAME_LENGTH"
    command: yarn run build # was yarn run start
    volumes:
      - ./front:/usr/src/app

  pusher:
    image: thecodingmachine/nodejs:12
    environment:
      DEBUG: "*"
      STARTUP_COMMAND_1: yarn install
      SECRET_JITSI_KEY: "$SECRET_JITSI_KEY"
      SECRET_KEY: yourSecretKey
      ADMIN_API_TOKEN: "$ADMIN_API_TOKEN"
      API_URL: back:50051
      JITSI_URL: "$JITSI_URL"
      JITSI_ISS: "$JITSI_ISS"
    command: yarn run prod # was yarn dev
    ports:
      - "127.0.0.1:8002:8080"
    volumes:
      - ./pusher:/usr/src/app

  #maps:
    #image: thecodingmachine/nodejs:12-apache
    #environment:
      #DEBUG_MODE: "$DEBUG_MODE"
      #HOST: "0.0.0.0"
      #NODE_ENV: development
      ##APACHE_DOCUMENT_ROOT: dist/
      ##APACHE_EXTENSIONS: headers
      ##APACHE_EXTENSION_HEADERS: 1
      #STARTUP_COMMAND_0: sudo a2enmod headers
      #STARTUP_COMMAND_1: yarn install
      #STARTUP_COMMAND_2: yarn run dev &
    #volumes:
      #- ./maps:/var/www/html
    #labels:
      #- "traefik.http.routers.maps.rule=Host(`maps.${DOMAIN}`)"
      #- "traefik.http.routers.maps.entryPoints=web,traefik"
      #- "traefik.http.services.maps.loadbalancer.server.port=80"
      #- "traefik.http.routers.maps-ssl.rule=Host(`maps.${DOMAIN}`)"
      #- "traefik.http.routers.maps-ssl.entryPoints=websecure"
      #- "traefik.http.routers.maps-ssl.tls=true"
      #- "traefik.http.routers.maps-ssl.service=maps"

  back:
    image: thecodingmachine/nodejs:12
    #command: yarn run profile
    environment:
      DEBUG: "*"
      STARTUP_COMMAND_1: yarn install
      SECRET_KEY: yourSecretKey
      SECRET_JITSI_KEY: "$SECRET_JITSI_KEY"
      ALLOW_ARTILLERY: "true"
      ADMIN_API_TOKEN: "$ADMIN_API_TOKEN"
      JITSI_URL: "$JITSI_URL"
      JITSI_ISS: "$JITSI_ISS"
      MAX_PER_GROUP: "$MAX_PER_GROUP"
    command: yarn run prod # was yarn dev
    volumes:
      - ./back:/usr/src/app

  uploader:
    image: thecodingmachine/nodejs:12
    #command: yarn run profile
    environment:
      DEBUG: "*"
      STARTUP_COMMAND_1: yarn install
    command: yarn run prod # was yarn dev
    ports:
      - "127.0.0.1:8005:8080"
    volumes:
      - ./uploader:/usr/src/app

  messages:
    #image: thecodingmachine/nodejs:14
    image: thecodingmachine/workadventure-back-base:latest
    environment:
      #STARTUP_COMMAND_0: sudo apt-get install -y inotify-tools
      STARTUP_COMMAND_1: yarn install
      STARTUP_COMMAND_2: yarn run proto:watch
    volumes:
      - ./messages:/usr/src/app
      - ./back:/usr/src/back
      - ./front:/usr/src/front
      - ./pusher:/usr/src/pusher

#  coturn:
#    image: coturn/coturn:4.5.2
#    command:
#      - turnserver
#      #- -c=/etc/coturn/turnserver.conf
#      - --log-file=stdout
#      - --external-ip=$$(detect-external-ip)
#      - --listening-port=3478
#      - --min-port=10000
#      - --max-port=10010
#      - --tls-listening-port=5349
#      - --listening-ip=0.0.0.0
#      - --realm=coturn.${DOMAIN}
#      - --server-name=coturn.${DOMAIN}
#      - --lt-cred-mech
#      # Enable Coturn "REST API" to validate temporary passwords.
#      #- --use-auth-secret
#      #- --static-auth-secret=SomeStaticAuthSecret
#      #- --userdb=/var/lib/turn/turndb
#      - --user=workadventure:WorkAdventure123
#      # use real-valid certificate/privatekey files
#      #- --cert=/root/letsencrypt/fullchain.pem
#      #- --pkey=/root/letsencrypt/privkey.pem
#    network_mode: host
